[
 [:app :lt.objs.plugins/load-js ["codemirror/clojure.js" "clojure_compiled.js"]]
 [:app :lt.plugins.clojure/set-default-cljs-client :auto]
 [:app :lt.plugins.clojure/set-cljs-browser-paths ["index.html" "resources/public/index.html" "public/index.html" "dev-resources/public/index.html"]]

 [:clients :lt.plugins.clojure/handle-cancellation]

 [:clojure.lang :lt.plugins.clojure/connect-local]
 [:clojure.lang :lt.plugins.clojure/eval!]
 [:clojure.lang :lt.plugins.clojure/build!]

 [:editor.clj :lt.object/add-tag :editor.clj.common]
 [:editor.clj :lt.object/add-tag :editor.clj.eval]
 [:editor.clj :lt.plugins.clojure/eval-print]
 [:editor.clj :lt.plugins.clojure/eval-print-err]
 [:editor.clj :lt.plugins.clojure/clj-result]
 [:editor.clj :lt.plugins.clojure/clj-result.inline]
 [:editor.clj :lt.plugins.clojure/clj-result.statusbar]
 [:editor.clj :lt.plugins.clojure/clj-result.replace]
 [:editor.clj :lt.plugins.clojure/clj-result.inline-at-cursor]
 [:editor.clj :lt.plugins.clojure/clj-result.return]
 [:editor.clj :lt.plugins.clojure/clj-exception]
 [:editor.clj :lt.plugins.clojure/clj-watch-result]
 [:editor.clj :lt.plugins.clojure/clj-watch-src]
 [:editor.clj :lt.plugins.clojure/clj-watch-custom-src]
 [:editor.clj :lt.plugins.clojure/clj-doc]
 [:editor.clj :lt.plugins.clojure/print-clj-doc]

 [:editor.clj.common :lt.plugins.clojure/on-result-set-ns]
 [:editor.clj.common :lt.plugins.clojure/no-op]
 [:editor.clj.common :lt.object/add-tag :watchable]
 [:editor.clj.common :lt.object/add-tag :docable]
 [:editor.clj.common :lt.object/add-tag :editor.clj.hints]
 [:editor.clj.common :lt.object/add-tag :editor.clj.jump-to-definition]
 [:editor.clj.common :lt.plugins.clojure/on-eval.custom]

 [:editor.clj.eval :lt.plugins.clojure/on-eval.one]
 [:editor.clj.eval :lt.plugins.clojure/on-eval.clj]

 [:editor.clj.hints :lt.plugins.clojure/clj-result]
 [:editor.clj.hints :lt.plugins.clojure/trigger-update-hints]
 [:editor.clj.hints :lt.plugins.clojure/finish-update-hints]
 [:editor.clj.hints :lt.plugins.clojure/use-local-hints]

 [:editor.clj.jump-to-definition :lt.plugins.clojure/jump-to-definition-at-cursor]
 [:editor.clj.jump-to-definition :lt.plugins.clojure/start-jump-to-definition]
 [:editor.clj.jump-to-definition :lt.plugins.clojure/finish-jump-to-definition]

 [:editor.cljs :lt.object/add-tag :editor.clj.common]
 [:editor.cljs :lt.object/add-tag :editor.cljs.eval]
 [:editor.cljs :lt.plugins.clojure/eval-print]
 [:editor.cljs :lt.plugins.clojure/eval-print-err]
 [:editor.cljs :lt.plugins.clojure/exec.cljs!]
 [:editor.cljs :lt.plugins.clojure/on-code]
 [:editor.cljs :lt.plugins.clojure/cljs-result]
 [:editor.cljs :lt.plugins.clojure/cljs-result.inline]
 [:editor.cljs :lt.plugins.clojure/cljs-result.statusbar]
 [:editor.cljs :lt.plugins.clojure/cljs-result.replace]
 [:editor.cljs :lt.plugins.clojure/cljs-result.inline-at-cursor]
 [:editor.cljs :lt.plugins.clojure/cljs-result.return]
 [:editor.cljs :lt.plugins.clojure/cljs-exception]
 [:editor.cljs :lt.plugins.clojure/cljs-watch-result]
 [:editor.cljs :lt.plugins.clojure/cljs-watch-src]
 [:editor.cljs :lt.plugins.clojure/cljs-watch-custom-src]
 [:editor.cljs :lt.plugins.clojure/cljs-doc]
 [:editor.cljs :lt.plugins.clojure/print-cljs-doc]
 [:editor.cljs :lt.objs.plugins/check-for-plugin-file]

 [:editor.cljs.eval :lt.plugins.clojure/on-eval.one]
 [:editor.cljs.eval :lt.plugins.clojure/on-eval.cljs]

 [:files :lt.objs.files/file-types [{:exts [:clj], :mime "text/x-clojure", :tags [:editor.clj :editor.clojure], :name "Clojure"}
                                    {:exts [:cljs], :mime "text/x-clojurescript", :tags [:editor.cljs :editor.clojurescript], :name "ClojureScript"}
                                    {:exts [:cljc], :mime "text/x-clojure", :tags [:editor.clj :editor.clojure], :name "Clojure/ClojureScript"}]]

 [:nrepl.client :lt.plugins.clojure.nrepl/client.settings]
 [:nrepl.client :lt.plugins.clojure.nrepl/init-session]
 [:nrepl.client :lt.object/add-tag :nrepl.client.common]

 [:nrepl.client.common :lt.plugins.clojure.nrepl/nrepl-message]
 [:nrepl.client.common :lt.plugins.clojure.nrepl/nrepl-connect]
 [:nrepl.client.common :lt.plugins.clojure.nrepl/nrepl-send!]
 [:nrepl.client.common :lt.plugins.clojure.nrepl/connect!]
 [:nrepl.client.common :lt.plugins.clojure.nrepl/try-connect!]
 [:nrepl.client.common :lt.plugins.clojure.nrepl/close]
 [:nrepl.client.common :lt.plugins.clojure/eval-print-err]
 [:nrepl.client.common :lt.plugins.clojure/eval-print]
 [:nrepl.client.common :lt.plugins.clojure/clj-result]
 [:nrepl.client.common :lt.plugins.clojure/clj-exception]

 [:nrepl.client.remote :lt.plugins.clojure.nrepl/client.settings.remote]
 [:nrepl.client.remote :lt.plugins.clojure.nrepl/init-remote-session]
 [:nrepl.client.remote :lt.object/add-tag :nrepl.client.common]

 [:plugin.file :lt.plugins.clojure/build-cljs-plugin]
 [:plugin.file :lt.plugins.clojure/plugin-compile-results]

 [:sidebar.docs.search :lt.plugins.clojure/clj-doc-search]
 [:sidebar.docs.search :lt.plugins.clojure/cljs-doc-search]

 ; collapsible stacktrace
 [:editor.clj.common :lt.plugins.clojure.collapsible-exception/expandable-exceptions]
 ; new :collapsible.exception TAG
 [:collapsible.exception :lt.objs.menu/menu!]
 [:collapsible.exception :lt.objs.eval/ex-menu+]
 [:collapsible.exception :lt.objs.eval/ex-clear]
 [:collapsible.exception :lt.objs.eval/expand-on-click]
 [:collapsible.exception :lt.objs.eval/shrink-on-double-click]
 [:collapsible.exception :lt.objs.eval/destroy-on-cleared]
 ;[:inline.exception :lt.objs.eval/copy-exception]
 ;NOTE: currently this copies the complete stacktrace but what about just
      ; copying the summary?
 [:collapsible.exception :lt.objs.eval/copy-result]
]
